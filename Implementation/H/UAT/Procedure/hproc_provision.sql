--------------------------------------------------------
--  File created - Thursday-May-29-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Procedure HPROC_PROVISION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE HPROC_PROVISION 
AS
  V_COUNT       NUMBER;
  EX_UPLOAD     EXCEPTION;
  FILE_NOTFOUND EXCEPTION;
  V_CNT         NUMBER;
  V_EXISTS      BOOLEAN;
  V_LENGTH      NUMBER;
  V_BLOCKSIZE   NUMBER;
  V_AUDIT       NUMBER;
BEGIN
  UTL_FILE.FGETATTR('HG_HAMC_PUMP_DIR', 'PROVISION.CSV', V_EXISTS, V_LENGTH, V_BLOCKSIZE);
  IF V_EXISTS THEN
    /*
    NEED TO CHECK THE DATA SO THAT THE DATA DOES NOT GET INSERTED INTO THE TEMPOPARY TABLE
    MULTIPLE TIMES EVEN IF THE PROCEDURE IS RUNNED MULTIPLE TIMES
    */
    SELECT COUNT(*)
    INTO V_COUNT
    FROM HPER_PROVISION HPER_PROVISION,
      HTMP_PROVISION_EXT HTMP_PROVISION_EXT
    WHERE HPER_PROVISION.SCHEME        = HTMP_PROVISION_EXT.SCHEME
    AND HPER_PROVISION.SCHEME_CATEGORY = HTMP_PROVISION_EXT.SCHEME_CATEGORY
    AND HPER_PROVISION.SCHEME_GROUP    = HTMP_PROVISION_EXT.SCHEME_GROUP
    AND HPER_PROVISION.AMOUNT          = HTMP_PROVISION_EXT.AMOUNT
    AND HPER_PROVISION.UPD_DT          = SYSDATE;
    IF V_COUNT                         < 1 THEN
      /*
      INSERTING THE DATA FROM THE TEMPORARY TABLE INTO THE PERMANENT TABLE
      */
      INSERT
      INTO HPER_PROVISION
        (
          SCHEME,
          SCHEME_CATEGORY,
          SCHEME_GROUP,
          AMOUNT,
          UPD_DT,
          VALUE_DATE,
          STATUS
        )
      SELECT HTMP_PROVISION_EXT.SCHEME,
        HTMP_PROVISION_EXT.SCHEME_CATEGORY,
        HTMP_PROVISION_EXT.SCHEME_GROUP,
        HTMP_PROVISION_EXT.AMOUNT, SYSDATE,
        SYSDATE,
        'A'
      FROM HTMP_PROVISION_EXT;
      COMMIT;
    ELSE
      /*
      NEED TO THROW AN EXCEPTION IF THE RECORD ALREADY EXISTS.
      */
      RAISE EX_UPLOAD;
    END IF;
    /*
    NEED TO CHECK THE DATA SO THAT THE DATA DOES NOT GET INSERTED INTO THE PERMENANT TABLE
    MULTIPLE TIMES EVEN IF THE PROCEDURE IS RUNNED MULTIPLE TIMES
    */
    SELECT COUNT(*)
    INTO V_CNT
    FROM HPER_PROVISION HPER_PROVISION,
      HUPD_PROVISION_UPLOAD HUPD_PROVISION_UPLOAD
    WHERE HUPD_PROVISION_UPLOAD.SCHEME = HPER_PROVISION.SCHEME
    AND HPER_PROVISION.SCHEME_CATEGORY = HUPD_PROVISION_UPLOAD.SCHEME_CATEGORY
    AND HPER_PROVISION.SCHEME_GROUP    = HUPD_PROVISION_UPLOAD.SCHEME_GROUP
    AND HPER_PROVISION.AMOUNT          = HUPD_PROVISION_UPLOAD.AMOUNT ;
    IF V_CNT                           < 1 THEN
      /*
      INSERTING THE DATA FROM PERMANENT TABLE TO HI TABLES SINCE WE NEED TO TRUNCATE THE PERMANENT TABLE
      REGULARLY AND ALSO WE WILL PICK ONLY SELECTED COLUMNS IN THE HI TABLE .
      */
      INSERT
      INTO HUPD_PROVISION_UPLOAD
        (
          PROVISION_ID,
          SCHEME,
          SCHEME_CATEGORY,
          SCHEME_GROUP,
          AMOUNT,
          UPLOAD_DT
        )
      SELECT PROVISION_SEQ.NEXTVAL,
        SCHEME,
        SCHEME_CATEGORY,
        SCHEME_GROUP,
        AMOUNT,
        SYSDATE
      FROM HPER_PROVISION;
      COMMIT;
    ELSE
      RAISE EX_UPLOAD;
    END IF;
    /*
    INSERTING THE DATA IN THE AUDITLOG TABLE FOR FURTHER REFERENCE.
    */
    SELECT COUNT(*)
    INTO V_AUDIT
    FROM HI_AUDITLOG
    WHERE PROCEDURE_NAME = 'HPROC_PROVISION'
    AND TABLE_NAME       = 'HUPD_PROVISION_UPLOAD'
    AND AUDIT_DT         = SYSDATE
    AND PROCEDURE_FLAG   = 'Y';
    IF V_AUDIT           < 1 THEN
      INSERT
      INTO HI_AUDITLOG
        (
          AUDITLOG_ID,
          PROCEDURE_NAME,
          TABLE_NAME,
          REPO_NAME,
          PROCEDURE_FLAG,
          TABLE_FLAG,
          REPO_FLAG,
          AUDIT_DT
        )
      SELECT AUDIT_SEQ.NEXTVAL ,
        'HPROC_PROVISION'       AS PROC_NAME,
        'HUPD_PROVISION_UPLOAD' AS TABLE_NAME,
        NULL                    AS REP0_NAME,
        'Y'                     AS PROCEDURE_FLAG,
        'Y'                     AS TABLE_FLAG,
        NULL                    AS REPO_FLAG,
        SYSDATE                 AS AUDIT_DT
      FROM DUAL;
      COMMIT;
    ELSE
      RAISE EX_UPLOAD;
    END IF;
    /*
    AFTER INSERTING THE DATA THE PERMANENT TABLE SHOULD BE REFERESED PERIODICALLY
    FOR EXAMPLE WE ARE DELETING THE RECORDS WHICH ARE GREATER THAN A WEEK FOR THIS TABLE.
    DELETE
    FROM HPER_PROVISION
    WHERE UPD_DT >= TRUNC (UPD_DT) - 7;
    COMMIT;*/
    UTL_FILE.FREMOVE ('HG_HAMC_PUMP_DIR', 'PROVISION.CSV');
  ELSE
    RAISE FILE_NOTFOUND;
  END IF;
EXCEPTION
WHEN EX_UPLOAD THEN
  RAISE_APPLICATION_ERROR(-20001,'DATA IS ALREADY UPLOADED IN THE SYSTEM FOR TODAY. YOU WILL NOT BE ABLE TO UPLOAD THE FILE FOR TODAY PLEASE TRY TO UPLOAD THE TOMORROW.');
WHEN FILE_NOTFOUND THEN
  RAISE_APPLICATION_ERROR(-20002,'FILE NOT FOUND IN THE DIRECTORY.');
END HPROC_PROVISION;

/
