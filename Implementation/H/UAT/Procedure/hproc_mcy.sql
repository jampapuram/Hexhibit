--------------------------------------------------------
--  File created - Wednesday-May-28-2014   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Procedure HPROC_MCY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE HPROC_MCY 
AS
  V_COUNT       NUMBER;
  EX_UPLOAD     EXCEPTION;
  FILE_NOTFOUND EXCEPTION;
  V_CNT         NUMBER;
  V_EXISTS      BOOLEAN;
  V_LENGTH      NUMBER;
  V_BLOCKSIZE   NUMBER;
  V_AUDIT       NUMBER;
BEGIN
  UTL_FILE.FGETATTR('HG_HAMC_PUMP_DIR', 'MCY.CSV', V_EXISTS, V_LENGTH, V_BLOCKSIZE);
  IF V_EXISTS THEN
    /*
    NEED TO CHECK THE DATA SO THAT THE DATA DOES NOT GET INSERTED INTO THE TEMPOPARY TABLE
    MULTIPLE TIMES EVEN IF THE PROCEDURE IS RUNNED MULTIPLE TIMES
    */
    SELECT COUNT(*)
    INTO V_COUNT
    FROM HPER_MCY HPER_MCY,
      HTMP_MCY_EXT HTMP_MCY_EXT
    WHERE HPER_MCY.MCY_DATE                = HTMP_MCY_EXT.MCY_DATE
    AND HPER_MCY.FANDO                     = HTMP_MCY_EXT.FANDO
    AND HPER_MCY.P                         = HTMP_MCY_EXT.P
    AND HPER_MCY.CM_CODE                   = HTMP_MCY_EXT.CM_CODE
    AND HPER_MCY.MKT_TYPE                  = HTMP_MCY_EXT.MKT_TYPE
    AND HPER_MCY.CP_CODE                   = HTMP_MCY_EXT.CP_CODE
    AND HPER_MCY.ACC_TYPE                  = HTMP_MCY_EXT.ACC_TYPE
    AND HPER_MCY.CLIENT_ACC_CODE           = HTMP_MCY_EXT.CLIENT_ACC_CODE
    AND HPER_MCY.INSTR_TYPE                = HTMP_MCY_EXT.INSTR_TYPE
    AND HPER_MCY.SYMBOL                    = HTMP_MCY_EXT.SYMBOL
    AND HPER_MCY.EXPIRY                    = HTMP_MCY_EXT.EXPIRY
    AND HPER_MCY.STRIKE_PRICE              = HTMP_MCY_EXT.STRIKE_PRICE
    AND HPER_MCY.OPTION_TYPE               = HTMP_MCY_EXT.OPTION_TYPE
    AND HPER_MCY.CA_LEVEL                  = HTMP_MCY_EXT.CA_LEVEL
    AND HPER_MCY.BF_LONG_QTY               = HTMP_MCY_EXT.BF_LONG_QTY
    AND HPER_MCY.BF_LONG_VALUE             = HTMP_MCY_EXT.BF_LONG_VALUE
    AND HPER_MCY.BF_SHORT_QTY              = HTMP_MCY_EXT.BF_SHORT_QTY
    AND HPER_MCY.BF_SHORT_VALUE            = HTMP_MCY_EXT.BF_SHORT_VALUE
    AND HPER_MCY.OP_PUR_QTY                = HTMP_MCY_EXT.OP_PUR_QTY
    AND HPER_MCY.OP_PUR_VALUE              = HTMP_MCY_EXT.OP_PUR_VALUE
    AND HPER_MCY.OP_SALE_QTY               = HTMP_MCY_EXT.OP_SALE_QTY
    AND HPER_MCY.OP_SALE_VALUE             = HTMP_MCY_EXT.OP_SALE_VALUE
    AND HPER_MCY.PRE_LONG_QTY_BEF_EXERCISE = HTMP_MCY_EXT.PRE_LONG_QTY_BEF_EXERCISE
    AND HPER_MCY.PRE_LONG_VAL_BEF_EXERCISE = HTMP_MCY_EXT.PRE_LONG_VAL_BEF_EXERCISE
    AND HPER_MCY.PRE_SHORT_QTY_BEF_ASS     = HTMP_MCY_EXT.PRE_SHORT_QTY_BEF_ASS
    AND HPER_MCY.PRE_SHORT_VAL_BEF_ASS     = HTMP_MCY_EXT.PRE_SHORT_VAL_BEF_ASS
    AND HPER_MCY.EXE_QTY                   = HTMP_MCY_EXT.EXE_QTY
    AND HPER_MCY.ASS_QTY                   = HTMP_MCY_EXT.ASS_QTY
    AND HPER_MCY.POST_LONG_QTY_BEF_EXE     = HTMP_MCY_EXT.POST_LONG_QTY_BEF_EXE
    AND HPER_MCY.POST_LONG_VAL_BEF_EXE     = HTMP_MCY_EXT.POST_LONG_VAL_BEF_EXE
    AND HPER_MCY.POST_SHORT_QTY_BEF_ASS    = HTMP_MCY_EXT.POST_SHORT_QTY_BEF_ASS
    AND HPER_MCY.POST_SHORT_VAL_BEF_ASS    = HTMP_MCY_EXT.POST_SHORT_VAL_BEF_ASS
    AND HPER_MCY.SETTL_PRICE               = HTMP_MCY_EXT.SETTL_PRICE
    AND HPER_MCY.NET_PRM                   = HTMP_MCY_EXT.NET_PRM
    AND HPER_MCY.MTM                       = HTMP_MCY_EXT.MTM
    AND HPER_MCY.FINAL_SETLL               = HTMP_MCY_EXT.FINAL_SETLL
    AND HPER_MCY.EXERCISE_VALUE            = HTMP_MCY_EXT.EXERCISE_VALUE
    AND HPER_MCY.UPD_DT                    = SYSDATE;
    IF V_COUNT                             < 1 THEN
      /*
      INSERTING THE DATA FROM THE TEMPORARY TABLE INTO THE PERMANENT TABLE
      */
      INSERT
      INTO HPER_MCY
        (
          MCY_DATE,
          FANDO,
          P,
          CM_CODE,
          MKT_TYPE,
          CP_CODE,
          ACC_TYPE,
          CLIENT_ACC_CODE,
          INSTR_TYPE,
          SYMBOL,
          EXPIRY,
          STRIKE_PRICE,
          OPTION_TYPE,
          CA_LEVEL,
          BF_LONG_QTY,
          BF_LONG_VALUE,
          BF_SHORT_QTY,
          BF_SHORT_VALUE,
          OP_PUR_QTY,
          OP_PUR_VALUE,
          OP_SALE_QTY,
          OP_SALE_VALUE,
          PRE_LONG_QTY_BEF_EXERCISE,
          PRE_LONG_VAL_BEF_EXERCISE,
          PRE_SHORT_QTY_BEF_ASS,
          PRE_SHORT_VAL_BEF_ASS,
          EXE_QTY,
          ASS_QTY,
          POST_LONG_QTY_BEF_EXE,
          POST_LONG_VAL_BEF_EXE,
          POST_SHORT_QTY_BEF_ASS,
          POST_SHORT_VAL_BEF_ASS,
          SETTL_PRICE,
          NET_PRM,
          MTM,
          FINAL_SETLL,
          EXERCISE_VALUE,
          UPD_DT,
          VALUE_DATE, 
          STATUS
        )
      SELECT HTMP_MCY_EXT.MCY_DATE,
        HTMP_MCY_EXT.FANDO,
        HTMP_MCY_EXT.P,
        HTMP_MCY_EXT.CM_CODE,
        HTMP_MCY_EXT.MKT_TYPE,
        HTMP_MCY_EXT.CP_CODE,
        HTMP_MCY_EXT.ACC_TYPE,
        HTMP_MCY_EXT.CLIENT_ACC_CODE,
        HTMP_MCY_EXT.INSTR_TYPE,
        HTMP_MCY_EXT.SYMBOL,
        HTMP_MCY_EXT.EXPIRY,
        HTMP_MCY_EXT.STRIKE_PRICE,
        HTMP_MCY_EXT.OPTION_TYPE,
        HTMP_MCY_EXT.CA_LEVEL,
        HTMP_MCY_EXT.BF_LONG_QTY,
        HTMP_MCY_EXT.BF_LONG_VALUE,
        HTMP_MCY_EXT.BF_SHORT_QTY,
        HTMP_MCY_EXT.BF_SHORT_VALUE,
        HTMP_MCY_EXT.OP_PUR_QTY,
        HTMP_MCY_EXT.OP_PUR_VALUE,
        HTMP_MCY_EXT.OP_SALE_QTY,
        HTMP_MCY_EXT.OP_SALE_VALUE,
        HTMP_MCY_EXT.PRE_LONG_QTY_BEF_EXERCISE,
        HTMP_MCY_EXT.PRE_LONG_VAL_BEF_EXERCISE,
        HTMP_MCY_EXT.PRE_SHORT_QTY_BEF_ASS,
        HTMP_MCY_EXT.PRE_SHORT_VAL_BEF_ASS,
        HTMP_MCY_EXT.EXE_QTY,
        HTMP_MCY_EXT.ASS_QTY,
        HTMP_MCY_EXT.POST_LONG_QTY_BEF_EXE,
        HTMP_MCY_EXT.POST_LONG_VAL_BEF_EXE,
        HTMP_MCY_EXT.POST_SHORT_QTY_BEF_ASS,
        HTMP_MCY_EXT.POST_SHORT_VAL_BEF_ASS,
        HTMP_MCY_EXT.SETTL_PRICE,
        HTMP_MCY_EXT.NET_PRM,
        HTMP_MCY_EXT.MTM,
        HTMP_MCY_EXT.FINAL_SETLL,
        HTMP_MCY_EXT.EXERCISE_VALUE,
        SYSDATE,
        SYSDATE,
        'A'
      FROM HTMP_MCY_EXT;
      COMMIT;
    ELSE
      /*
      NEED TO THROW AN EXCEPTION IF THE RECORD ALREADY EXISTS.
      */
      RAISE EX_UPLOAD;
    END IF;
    /*
    NEED TO CHECK THE DATA SO THAT THE DATA DOES NOT GET INSERTED INTO THE PERMENANT TABLE
    MULTIPLE TIMES EVEN IF THE PROCEDURE IS RUNNED MULTIPLE TIMES
    */
    SELECT COUNT(*)
    INTO V_CNT
    FROM HPER_MCY HPER_MCY,
      HUPD_MCY_UPLOAD HUPD_MCY_UPLOAD
    WHERE HUPD_MCY_UPLOAD.MCY_DATE         = HPER_MCY.MCY_DATE
    AND HPER_MCY.FANDO                     = HUPD_MCY_UPLOAD.FANDO
    AND HPER_MCY.P                         = HUPD_MCY_UPLOAD.P
    AND HPER_MCY.CM_CODE                   = HUPD_MCY_UPLOAD.CM_CODE
    AND HPER_MCY.MKT_TYPE                  = HUPD_MCY_UPLOAD.MKT_TYPE
    AND HPER_MCY.CP_CODE                   = HUPD_MCY_UPLOAD.CP_CODE
    AND HPER_MCY.ACC_TYPE                  = HUPD_MCY_UPLOAD.ACC_TYPE
    AND HPER_MCY.CLIENT_ACC_CODE           = HUPD_MCY_UPLOAD.CLIENT_ACC_CODE
    AND HPER_MCY.INSTR_TYPE                = HUPD_MCY_UPLOAD.INSTR_TYPE
    AND HPER_MCY.SYMBOL                    = HUPD_MCY_UPLOAD.SYMBOL
    AND HPER_MCY.EXPIRY                    = HUPD_MCY_UPLOAD.EXPIRY
    AND HPER_MCY.STRIKE_PRICE              = HUPD_MCY_UPLOAD.STRIKE_PRICE
    AND HPER_MCY.OPTION_TYPE               = HUPD_MCY_UPLOAD.OPTION_TYPE
    AND HPER_MCY.CA_LEVEL                  = HUPD_MCY_UPLOAD.CA_LEVEL
    AND HPER_MCY.BF_LONG_QTY               = HUPD_MCY_UPLOAD.BF_LONG_QTY
    AND HPER_MCY.BF_LONG_VALUE             = HUPD_MCY_UPLOAD.BF_LONG_VALUE
    AND HPER_MCY.BF_SHORT_QTY              = HUPD_MCY_UPLOAD.BF_SHORT_QTY
    AND HPER_MCY.BF_SHORT_VALUE            = HUPD_MCY_UPLOAD.BF_SHORT_VALUE
    AND HPER_MCY.OP_PUR_QTY                = HUPD_MCY_UPLOAD.OP_PUR_QTY
    AND HPER_MCY.OP_PUR_VALUE              = HUPD_MCY_UPLOAD.OP_PUR_VALUE
    AND HPER_MCY.OP_SALE_QTY               = HUPD_MCY_UPLOAD.OP_SALE_QTY
    AND HPER_MCY.OP_SALE_VALUE             = HUPD_MCY_UPLOAD.OP_SALE_VALUE
    AND HPER_MCY.PRE_LONG_QTY_BEF_EXERCISE = HUPD_MCY_UPLOAD.PRE_LONG_QTY_BEF_EXERCISE
    AND HPER_MCY.PRE_LONG_VAL_BEF_EXERCISE = HUPD_MCY_UPLOAD.PRE_LONG_VAL_BEF_EXERCISE
    AND HPER_MCY.PRE_SHORT_QTY_BEF_ASS     = HUPD_MCY_UPLOAD.PRE_SHORT_QTY_BEF_ASS
    AND HPER_MCY.PRE_SHORT_VAL_BEF_ASS     = HUPD_MCY_UPLOAD.PRE_SHORT_VAL_BEF_ASS
    AND HPER_MCY.EXE_QTY                   = HUPD_MCY_UPLOAD.EXE_QTY
    AND HPER_MCY.ASS_QTY                   = HUPD_MCY_UPLOAD.ASS_QTY
    AND HPER_MCY.POST_LONG_QTY_BEF_EXE     = HUPD_MCY_UPLOAD.POST_LONG_QTY_BEF_EXE
    AND HPER_MCY.POST_LONG_VAL_BEF_EXE     = HUPD_MCY_UPLOAD.POST_LONG_VAL_BEF_EXE
    AND HPER_MCY.POST_SHORT_QTY_BEF_ASS    = HUPD_MCY_UPLOAD.POST_SHORT_QTY_BEF_ASS
    AND HPER_MCY.POST_SHORT_VAL_BEF_ASS    = HUPD_MCY_UPLOAD.POST_SHORT_VAL_BEF_ASS
    AND HPER_MCY.SETTL_PRICE               = HUPD_MCY_UPLOAD.SETTL_PRICE
    AND HPER_MCY.NET_PRM                   = HUPD_MCY_UPLOAD.NET_PRM
    AND HPER_MCY.MTM                       = HUPD_MCY_UPLOAD.MTM
    AND HPER_MCY.FINAL_SETLL               = HUPD_MCY_UPLOAD.FINAL_SETLL
    AND HPER_MCY.EXERCISE_VALUE            = HUPD_MCY_UPLOAD.EXERCISE_VALUE ;
    IF V_CNT                               < 1 THEN
      /*
      INSERTING THE DATA FROM PERMANENT TABLE TO HI TABLES SINCE WE NEED TO TRUNCATE THE PERMANENT TABLE
      REGULARLY AND ALSO WE WILL PICK ONLY SELECTED COLUMNS IN THE HI TABLE .
      */
      INSERT
      INTO HUPD_MCY_UPLOAD
        (
          MCY_ID,
          MCY_DATE,
          FANDO,
          P,
          CM_CODE,
          MKT_TYPE,
          CP_CODE,
          ACC_TYPE,
          CLIENT_ACC_CODE,
          INSTR_TYPE,
          SYMBOL,
          EXPIRY,
          STRIKE_PRICE,
          OPTION_TYPE,
          CA_LEVEL,
          BF_LONG_QTY,
          BF_LONG_VALUE,
          BF_SHORT_QTY,
          BF_SHORT_VALUE,
          OP_PUR_QTY,
          OP_PUR_VALUE,
          OP_SALE_QTY,
          OP_SALE_VALUE,
          PRE_LONG_QTY_BEF_EXERCISE,
          PRE_LONG_VAL_BEF_EXERCISE,
          PRE_SHORT_QTY_BEF_ASS,
          PRE_SHORT_VAL_BEF_ASS,
          EXE_QTY,
          ASS_QTY,
          POST_LONG_QTY_BEF_EXE,
          POST_LONG_VAL_BEF_EXE,
          POST_SHORT_QTY_BEF_ASS,
          POST_SHORT_VAL_BEF_ASS,
          SETTL_PRICE,
          NET_PRM,
          MTM,
          FINAL_SETLL,
          EXERCISE_VALUE,
          UPLOAD_DATE
        )
      SELECT MCY_SEQ.NEXTVAL,
        MCY_DATE,
        FANDO,
        P,
        CM_CODE,
        MKT_TYPE,
        CP_CODE,
        ACC_TYPE,
        CLIENT_ACC_CODE,
        INSTR_TYPE,
        SYMBOL,
        EXPIRY,
        STRIKE_PRICE,
        OPTION_TYPE,
        CA_LEVEL,
        BF_LONG_QTY,
        BF_LONG_VALUE,
        BF_SHORT_QTY,
        BF_SHORT_VALUE,
        OP_PUR_QTY,
        OP_PUR_VALUE,
        OP_SALE_QTY,
        OP_SALE_VALUE,
        PRE_LONG_QTY_BEF_EXERCISE,
        PRE_LONG_VAL_BEF_EXERCISE,
        PRE_SHORT_QTY_BEF_ASS,
        PRE_SHORT_VAL_BEF_ASS,
        EXE_QTY,
        ASS_QTY,
        POST_LONG_QTY_BEF_EXE,
        POST_LONG_VAL_BEF_EXE,
        POST_SHORT_QTY_BEF_ASS,
        POST_SHORT_VAL_BEF_ASS,
        SETTL_PRICE,
        NET_PRM,
        MTM,
        FINAL_SETLL,
        EXERCISE_VALUE,
        SYSDATE
      FROM HPER_MCY;
      COMMIT;
    ELSE
      RAISE EX_UPLOAD;
    END IF;
    /*
    INSERTING THE DATA IN THE AUDITLOG TABLE FOR FURTHER REFERENCE.
    */
    SELECT COUNT(*)
    INTO V_AUDIT
    FROM HI_AUDITLOG
    WHERE PROCEDURE_NAME = 'HPROC_MCY'
    AND TABLE_NAME       = 'HUPD_MCY_UPLOAD'
    AND AUDIT_DT         = SYSDATE
    AND PROCEDURE_FLAG   = 'Y';
    IF V_AUDIT           < 1 THEN
      INSERT
      INTO HI_AUDITLOG
        (
          AUDITLOG_ID,
          PROCEDURE_NAME,
          TABLE_NAME,
          REPO_NAME,
          PROCEDURE_FLAG,
          TABLE_FLAG,
          REPO_FLAG,
          AUDIT_DT
        )
      SELECT AUDIT_SEQ.NEXTVAL ,
        'HPROC_MCY'       AS PROC_NAME,
        'HUPD_MCY_UPLOAD' AS TABLE_NAME,
        NULL              AS REP0_NAME,
        'Y'               AS PROCEDURE_FLAG,
        'Y'               AS TABLE_FLAG,
        NULL              AS REPO_FLAG,
        SYSDATE           AS AUDIT_DT
      FROM DUAL;
      COMMIT;
    ELSE
      RAISE EX_UPLOAD;
    END IF;
    /*
    AFTER INSERTING THE DATA THE PERMANENT TABLE SHOULD BE REFERESED PERIODICALLY
    FOR EXAMPLE WE ARE DELETING THE RECORDS WHICH ARE GREATER THAN A WEEK FOR THIS TABLE.
    DELETE
    FROM HPER_MCY
    WHERE UPD_DT >= TRUNC (UPD_DT) - 7;
    COMMIT;*/
    UTL_FILE.FREMOVE ('HG_HAMC_PUMP_DIR', 'MCY.CSV');
  ELSE
    RAISE FILE_NOTFOUND;
  END IF;
EXCEPTION
WHEN EX_UPLOAD THEN
  RAISE_APPLICATION_ERROR(-20001,'DATA IS ALREADY UPLOADED IN THE SYSTEM FOR TODAY. YOU WILL NOT BE ABLE TO UPLOAD THE FILE FOR TODAY PLEASE TRY TO UPLOAD THE TOMORROW.');
WHEN FILE_NOTFOUND THEN
  RAISE_APPLICATION_ERROR(-20002,'FILE NOT FOUND IN THE DIRECTORY.');
END HPROC_MCY;

/
