
  CREATE OR REPLACE  VIEW HV_REGULATORY_HOLDING (MODULE_REF, COMPANY, DIVISION, PORTFOLIO, PORTFOLIO_NAME, PORTFOLIO_CATEGORY, PORTFOLIO_CATEGORY_NAME, PORTFOLIO_CCY, TRANS_DATE, SECURITY_TYPE, SECURITY, CUSTODIAN, INVEST_CATEGORY, QTY_LOGICAL, QTY_SETTLED, AVERAGE_PRICE, ACQU_COST_TCY, ACQU_COST_PCY, ACCR_INT_TCY, ACCR_INT_PCY, ACCR_AOD_TCY, ACCR_AOD_PCY, MARKET_PRICE, MARKET_VALUE_TCY, MARKET_VALUE_PCY, APPRE_DEPRE_TCY, APPRE_DEPRE_PCY, MARKET_YIELD, APPRE_DEPRE_PER, NET_ASSET_VALUE, PER_NAV, LIQUIDITY, NET_CURRENT_ASSETS, CASH_EQ_NCA, YIELD, YTM, DURATION, MDURATION, ASSET_GROUP, ASSET_GROUP_NAME, ASSET_GROUP_SORT_ORDER, ASSET_CLASS, ASSET_NAME, SECURITY_NAME, MATURITY_DATE, FACE_VALUE, COUPON_RATE, ISSUER, ISSUER_NAME, MGMT_GROUP, MGMTGROUP_NAME, IS_ISSUER_RELATED, INDUSTRY, INDUSTRY_NAME, SECTOR, SECTOR_NAME, SECTOR_CATEGORY, CURRENCY, CURRENCY_NAME, COUNTRY, COUNTRY_NAME, IS_ASSET_CLASS_LIQUID_ASSET, IS_ASSET_CLASS_TRADABLE, IS_SECURITY_LISTED, IS_SECURITY_THINLY_TRADED, IS_SECURITY_VOTING_RIGHTS, SECURITY_RATING, RATING_SOURCE, RATING_RANK, RATING_NAME, ISSUER_TYPE, MARKET_LOT, ISIN_CODE, IRDA_CODE, IRDA_CATEGORY, IS_FIXED_INCOME, MATURITY_DAYS, BUSINESS_DATE, DATA_SOURCE, TIME_STAMP) AS 
  SELECT 
    'holding' as module_ref,
    scheme.amc_code AS company,
    'AMC'                AS division,
    scheme.scheme        AS portfolio,
    scheme.scheme_name          AS portfolio_name,
    scheme.port_type     AS portfolio_category,
    scheme.port_type     AS portfolio_category_name,
    scheme.currency      AS portfolio_ccy,
    holding.nav_date     AS trans_date,
    'HOLD'                AS security_type,
    holding.security,
    holding.custodian,
    holding.invest_type                                                                                                                  AS invest_category,
    holding.units                                                                                                                        AS qty_logical,
    holding.units                                                                                                                        AS qty_settled,
    holding.avg_price                                                                                                                    AS average_price,
    holding.fcy_pur_value                                                                                                                AS acqu_cost_tcy,
    holding.pur_value                                                                                                                    AS acqu_cost_pcy,
    holding.fcy_accr_int                                                                                                                 AS accr_int_tcy,
    holding.accr_int                                                                                                                     AS accr_int_pcy,
    holding.fcy_accr_aod                                                                                                                 AS accr_aod_tcy,
    holding.accr_aod                                                                                                                     AS accr_aod_pcy,
    holding.mkt_price                                                                                                                    AS market_price,
    (holding.fcy_amount*-1)                                                                                                              AS market_value_tcy,
    (holding.amount    *-1)                                                                                                              AS market_value_pcy,
    holding.fcy_gain_loss                                                                                                                AS appre_depre_tcy,
    holding.gain_loss                                                                                                                    AS appre_depre_pcy,
    0                                                                                                                                    AS market_yield,
    DECODE((HOLDING.FCY_PUR_VALUE+HOLDING.FCY_ACCR_AOD), 0, 0, (HOLDING.FCY_GAIN_LOSS)/(HOLDING.FCY_PUR_VALUE+HOLDING.FCY_ACCR_AOD)*100) AS APPRE_DEPRE_PER,
    scheme.nav                                                                                                                           AS net_asset_value,      
    DECODE(scheme.nav, 0, 0, (holding.fcy_amount*-1)/scheme.nav*100)                                                                     AS per_nav,
    accbal.liquidity,
    accbal.net_current_assets,
    accbal.cash_eq_nca,
   /* QUANTIS.YIELD             AS yield,
    0                         AS ytm,
    QUANTIS.DURATION          AS duration,
    QUANTIS.MODIFIED_DURATION AS mduration,*/
   0            AS yield,
    0                         AS ytm,
    0         AS duration,
    0 AS mduration,
    security.asset_group,
    security.asset_group_name,
    security.asset_group_sort_order,
    security.asset_class,
    security.asset_name,
   -- security.asset_category,
    security.security_name,
    security.maturity_date,
    security.face_value,
    security.coupon_rate,
    security.issuer,
    security.issuer_name,
    security.mgmt_group,
    security.mgmtgroup_name,
    security.is_issuer_related,
    security.industry,
    0 AS industry_name,--security.industry_name,
    security.sector,
    security.sector_name,
    0 AS sector_category,--security.sector_category,
    security.currency,
    null currency_name,
    security.country,
    security.country_name,
    security.is_asset_class_liquid_asset,
    security.is_asset_class_tradable,
    security.is_security_listed,
    security.is_security_thinly_traded,
    security.is_security_voting_rights,
    security.security_rating,
    security.rating_source,
    0 AS rating_rank, -- security.rating_rank,
    0 AS rating_name, -- security.rating_name,
    security.issuer_type,
    security.market_lot,
    security.isin_code,
    security.irda_code,
    0 AS irda_category, --security.irda_category, COLUMN DOES NOT EXIST
    security.is_fixed_income,
    DECODE(security.maturity_date, NULL, 0, (security.maturity_date - scheme.cur_date)) AS maturity_days,
    scheme.cur_date                                                                     AS business_date,
    'HEXGENDBDATA'                                                                      AS data_source,
    CURRENT_TIMESTAMP                                                                   AS TIME_STAMP
    --holding.BOOK_COST                                                                   AS BOOK_COST
  FROM hm_SCHEME scheme,
    hi_lastnav_curr holding,
    --hi_frontend_position QUANTIS,
    hrep_security_detail_curr security,
    (SELECT accbal.scheme,
      SUM(
      CASE
        WHEN
          /*accbal.control_ac*/
          SUBSTR(accbal.account, 1, 6) IN ('010103', '080100')
        THEN (accbal.amount             *-1)
        ELSE 0
      END) AS liquidity,
      /*SUM(
      CASE
        WHEN
          /*accbal.control_ac
          SUBSTR(accbal.account, 1, 6) NOT IN ('110100', '111800', '010103', '080100')
        THEN (accbal.amount                 *-1)
        ELSE 0
      END)                  AS net_current_assets,*/
       sum(case when accbal.security is not null or accbal.control_ac in ('010103') then 0 else accbal.amount*-1 end) as net_current_assets,
     SUM(accbal.amount*-1) AS cash_eq_nca
    FROM hm_scheme scheme,
      hi_lastnav_curr ACCBAL
    WHERE scheme.amc_code      = accbal.amc_code
    AND scheme.scheme          = accbal.scheme
    AND accbal.nav_method      = 'A'
    AND accbal.security       IS NULL
    AND accbal.control_ac NOT IN (scheme.unit_capac, scheme.unit_reserve, scheme.prft_loss_acct, scheme.distributable_inc_acct)
    GROUP BY accbal.scheme
    ) ACCBAL
  WHERE scheme.amc_code         = holding.amc_code
  AND scheme.scheme             = holding.scheme
  AND scheme.scheme             = accbal.scheme
  AND holding.security          = security.security
  AND SCHEME.RECTYPE            = 'L'
  --AND QUANTIS.EXTERNAL_CODE (+) = HOLDING.SECURITY
union all
SELECT
  'REPO' as module_ref,
  hm_scheme.amc_code AS company,
  'AMC'                AS division,
  hm_scheme.scheme        AS portfolio,
  hm_scheme.scheme_name          AS portfolio_name,
  hm_scheme.port_type     AS portfolio_category,
  hm_scheme.port_type     AS portfolio_category_name,
  hm_scheme.currency      AS portfolio_ccy,
  hm_scheme.cur_date      AS trans_date,
  'REP'                AS security_type,
  repodeal.security,
  repodeal.custodian,
  repodeal.invest_type                                                                    AS invest_category,
  repodeal.units                                                                          AS qty_logical,
  repodeal.units                                                                          AS qty_settled,
  1                                                                                      AS average_price,
  repodeal.fcy_nett_val                                                                   AS acqu_cost_tcy,
  repodeal.nett_val                                                                       AS acqu_cost_pcy,
  0                                                                                      AS accr_int_tcy,
  0                                                                                      AS accr_int_pcy,
  0                                                                                      AS accr_aod_tcy,
  0                                                                                      AS accr_aod_pcy,
  DECODE(repodeal.units, 0, 0, (repodeal.fcy_nett_val+repodeal.fcy_accr_int)/repodeal.units) AS market_price,
  (repodeal.fcy_nett_val                            +repodeal.fcy_accr_int)                AS market_value_tcy,
  (repodeal.nett_val                                +repodeal.accr_int)                    AS market_value_pcy,
  0                                                                                      AS appre_depre_tcy,
  0                                                                                      AS appre_depre_pcy,
  0                                                                                      AS market_yield,
  0                                                                                      AS appre_depre_per,
  hm_scheme.nav                                                                             AS net_asset_value,
  DECODE(hm_scheme.nav, 0, 0, (repodeal.nett_val+repodeal.accr_int)/hm_scheme.nav*100)           AS per_nav,
  0                                                                                      AS liquidity,
  0                                                                                      AS net_current_assets,
  0                                                                                      AS cash_eq_nca,
  0                                                                                      AS yield,
  0                                                                                      AS ytm,
  0                                                                                      AS duration,
  0                                                                                      AS mduration,
  hm_asset_type.desc2,
  hm_asset_type.desc2 AS asset_group_name,
  0                    AS asset_group_sort_order,
  hm_asset_type.asset_type  AS asset_class,
  hm_asset_type.desc1        AS asset_name,
  ---hm_asset_type.cll_dp_stk  AS asset_category,
  hm_security.name        AS security_name,
  hm_security.mat_date    AS maturity_date,
  0                    AS face_value,
  0                    AS coupon_rate,
  hm_security.issuer,
  hm_issuer.issuername AS issuer_name,
  NULL        AS mgmt_group,
  NULL        AS mgmtgroup_name,
  'N'         AS is_issuer_related,
  NULL        AS industry,
  NULL        AS industry_name,
  NULL        AS sector,
  NULL        AS sector_name,
  NULL        AS sector_category,
  hm_security.currency,
  hm_security.currency AS currency_name,
  null country,
  null                                  AS country_name,
  hm_asset_type.liquid_asset_y_n                        AS is_asset_class_liquid_asset,
  DECODE(hm_asset_type.non_tradable_y_n, 'Y', 'N', 'Y') AS is_asset_class_tradable,
  'Y'                                              AS is_security_listed,
  'N'                                              AS is_security_thinly_traded,
  'N'                                              AS is_security_voting_rights,
  NULL                                             AS security_rating,
  NULL                                             AS rating_source,
  0                                                AS rating_rank,
  NULL                                             AS rating_name,
 hm_issuer.type, ---hm_issuer.issuer_type,issuertype in issuer table is all null
  0                                     AS market_lot,
  NULL                                  AS isin_code,
  NULL                                  AS irda_code,
  NULL                                  AS irda_category,
  'N'                                   AS is_fixed_income,
  (hm_security.mat_date - hm_scheme.cur_date) AS maturity_days,
  hm_scheme.cur_date                       AS business_date,
  'HEXGENDBDATA'                        AS data_source,
  CURRENT_TIMESTAMP
FROM hm_scheme,
  HI_REPO_DEAL_CURR repodeal ,
  hm_security,
  hm_issuer,
  hm_asset_type
WHERE hm_scheme.amc_code   = repodeal.amc_code
AND hm_scheme.scheme       = repodeal.scheme
AND hm_security.security   = repodeal.security
AND hm_asset_type.asset_type = repodeal.repo_asset_type
AND hm_issuer.issuercode       = hm_security.issuer
AND repodeal.mat_date    > (hm_scheme.cur_date -1)
union all
SELECT 
  'FUT' as module_ref,
  hm_scheme.amc_code AS company,
  'AMC'                AS division,
  hm_scheme.scheme        AS portfolio,
  hm_scheme.scheme_name          AS portfolio_name,
  hm_scheme.port_type     AS portfolio_category,
  hm_scheme.port_type     AS portfolio_category_name,
  hm_scheme.currency      AS portfolio_ccy,
  hm_scheme.cur_date      AS trans_date,
  'FUT'                AS security_type,
  futurepositions.indxfuture   AS security,
  futurepositions.custodian,
  futurepositions.invest_type                                                            AS invest_category,
  futurepositions.units                                                                  AS qty_logical,
  futurepositions.units                                                                  AS qty_settled,
  futurepositions.avg_price                                                              AS average_price,
  futurepositions.fcy_pur_value                                                          AS acqu_cost_tcy,
  futurepositions.pur_value                                                              AS acqu_cost_pcy,
  0                                                                              AS accr_int_tcy,
  0                                                                              AS accr_int_pcy,
  0                                                                              AS accr_aod_tcy,
  0                                                                              AS accr_aod_pcy,
  DECODE(futurepositions.units, 0, 0, futurepositions.fcy_market_value/futurepositions.units)            AS market_price,
  futurepositions.fcy_market_value                                                       AS market_value_tcy,
  futurepositions.market_value                                                           AS market_value_pcy,
  futurepositions.fcy_variable_margin                                                    AS appre_depre_tcy,
  futurepositions.variable_margin                                                        AS appre_depre_pcy,
  0                                                                              AS market_yield,
  DECODE(futurepositions.pur_value, 0, 0,futurepositions.variable_margin/futurepositions.pur_value*100) AS appre_depre_per,
  hm_scheme.nav                                                                     AS net_asset_value,
  DECODE(hm_scheme.nav, 0, 0,futurepositions.market_value/hm_scheme.nav*100)                  AS per_nav,
  0                                                                              AS liquidity,
  0                                                                              AS net_current_assets,
  0                                                                              AS cash_eq_nca,
  0                                                                              AS yield,
  0                                                                              AS ytm,
  0                                                                              AS duration,
  0                                                                              AS mduration,
  hm_asset_type.desc2,
  hm_asset_type.desc2     AS asset_group_name,
  0                        AS asset_group_sort_order,
  hm_asset_type.asset_type      AS asset_class,
  hm_asset_type.desc1            AS asset_name,
 --hm_asset_type.cll_dp_stk      AS asset_category,
  hi_indxfuture_curr.name            AS security_name,
  hi_indxfuture_curr.mat_date        AS maturity_date,
  0                        AS face_value,
  0                        AS coupon_rate,
  hi_indxfuture_curr.underlying_code AS issuer,
  hi_indxfuture_curr.underlying_code AS issuer_name,
  NULL                     AS mgmt_group,
  NULL                     AS mgmtgroup_name,
  'N'                      AS is_issuer_related,
  NULL                     AS industry,
  NULL                     AS industry_name,
  NULL                     AS sector,
  NULL                     AS sector_name,
  NULL                     AS sector_category,
  hi_indxfuture_curr.currency,
  hi_indxfuture_curr.currency AS currency_name,
  hi_indxfuture_curr.country,
  hi_indxfuture_curr.country                                 AS country_name,
  hm_asset_type.liquid_asset_y_n                        AS is_asset_class_liquid_asset,
  DECODE(hm_asset_type.non_tradable_y_n, 'Y', 'N', 'Y') AS is_asset_class_tradable,
  'Y'                                              AS is_security_listed,
  'N'                                              AS is_security_thinly_traded,
  'N'                                              AS is_security_voting_rights,
  NULL                                             AS security_rating,
  NULL                                             AS rating_source,
  0                                                AS rating_rank,
  NULL                                             AS rating_name,
  hi_indxfuture_curr.derivative_type                         AS issuer_type,
  0                                                AS market_lot,
  NULL                                             AS isin_code,
  NULL                                             AS irda_code,
  NULL                                             AS irda_category,
  'N'                                              AS is_fixed_income,
  (hi_indxfuture_curr.mat_date -hm_scheme.cur_date)            AS maturity_days,
  hm_scheme.cur_date                                  AS business_date,
  'HEXGENDBDATA'                                   AS data_source,
  CURRENT_TIMESTAMP
FROM hm_scheme ,
  HI_futurepositions_CURR futurepositions
  /* OPTIONSPOSITIONS */,
  hi_indxfuture_curr,
  hm_asset_type
WHERE hm_scheme.amc_code   = futurepositions.amc_code
AND hm_scheme.scheme       = futurepositions.scheme
AND futurepositions.units      <> 0
AND hi_indxfuture_curr.indxfuture = futurepositions.indxfuture
AND hm_Asset_type.asset_type =hi_indxfuture_curr.asset_type
;
 
