
  CREATE OR REPLACE  VIEW HV_SCHEME_TOTAL (CBLO_DATE, CBLO_SCHEME, CBLO_ACCOUNT_CODE, FO_DATE, FO_SCHEME, FO_ACCOUNT_CODE, REPO_SCHEME, REPO_TRAN, REPO_NAME, REPO_DATE, REPO_MAT_DATE, NET_INCOME_DATE, NET_INCOME_SCHEME, NET_INCOME_ACCOUNT_CODE, TOTAL_AMOUNT) AS 
  select CBLO_GSEC.VALUE_DATE CBLO_DATE,
CBLO_GSEC.SCHEME CBLO_SCHEME,
CBLO_GSEC.ACCOUNT_CODE CBLO_ACCOUNT_CODE,
--CBLO_GSEC.PLAN,
--CBLO_GSEC.SECURITY,
--CBLO_GSEC.CBLO_GSEC_AMOUNT ,
FO_BROKERAGE.VALUE_DATE FO_DATE,
FO_BROKERAGE.SCHEME FO_SCHEME,
FO_BROKERAGE.ACCOUNT_CODE FO_ACCOUNT_CODE,
--FO_BROKERAGE.FO_BROKERAGE,
REPO_INCOME.SCHEME REPO_SCHEME,
REPO_INCOME.TRAN_TYPE REPO_TRAN,
REPO_INCOME.NAME REPO_NAME,
REPO_INCOME.VALUE_DATE REPO_DATE,
REPO_INCOME.MAT_DATE REPO_MAT_DATE,
NET_INCOME.VALUE_DATE NET_INCOME_DATE,
NET_INCOME.SCHEME NET_INCOME_SCHEME,
NET_INCOME.ACCOUNT_CODE NET_INCOME_ACCOUNT_CODE,
---REPO_INCOME.REPO_AMOUNT,
(SUM(CBLO_GSEC.CBLO_GSEC_AMOUNT) + SUM(NVL(FO_BROKERAGE.FO_BROKERAGE,0)) +
 ROUND(NVL(SUM(REPO_INCOME.REPO_AMOUNT),0),4)+ NVL(SUM(NET_INCOME.NET_INCOME),0)) TOTAL_AMOUNT
FROM HV_FO_BROKERAGE FO_BROKERAGE,  HV_REPO_INCOME REPO_INCOME
, HV_CBLO_GSEC_INCOME CBLO_GSEC, HV_NET_INCOME NET_INCOME
WHERE CBLO_GSEC.SCHEME = FO_BROKERAGE.SCHEME (+) 
AND CBLO_GSEC.SCHEME = REPO_INCOME.SCHEME (+) 
AND CBLO_GSEC.VALUE_DATE = FO_BROKERAGE.VALUE_DATE (+)
AND  CBLO_GSEC.VALUE_DATE = REPO_INCOME.VALUE_DATE (+)
AND  CBLO_GSEC.SCHEME = NET_INCOME.SCHEME (+) 
AND CBLO_GSEC.VALUE_DATE = NET_INCOME.VALUE_DATE (+)
--AND REPO_INCOME.TRAN_TYPE IS NOT NULL
GROUP BY 
CBLO_GSEC.VALUE_DATE,
CBLO_GSEC.SCHEME,
CBLO_GSEC.ACCOUNT_CODE,
--CBLO_GSEC.PLAN,
--CBLO_GSEC.SECURITY,
--CBLO_GSEC.CBLO_GSEC_AMOUNT ,
FO_BROKERAGE.VALUE_DATE,
FO_BROKERAGE.SCHEME,
FO_BROKERAGE.ACCOUNT_CODE,
--FO_BROKERAGE.FO_BROKERAGE,
REPO_INCOME.SCHEME,
REPO_INCOME.TRAN_TYPE,
REPO_INCOME.NAME,
REPO_INCOME.VALUE_DATE,
REPO_INCOME.MAT_DATE,
NET_INCOME.VALUE_DATE,
NET_INCOME.SCHEME,
NET_INCOME.ACCOUNT_CODE;
 
